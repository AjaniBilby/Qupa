import "print.qp";

struct Rect {
	i32 width;
	i32 height;
}


i32 main() {
	// Define two example rectangles
	Rect a;
	Rect b;
	a.width = 4;
	a.height = 5;
	b.width = 6;
	b.height = 7;

	// Test single structure argument function
	println("Area:");
	i32 area = Area(a);
	print("  a: 20 == ");
	println(area);
	area = Area(b);
	print("  b: 42 == ");
	println(area);

	// Check parsing forward/back a structure
	Rect c = Shift(a, 3);
	println("Shift c:");
	print("  width  : 7 == ");
	println(c.width);
	print("  height : 8 == ");
	println(c.height);

	// Test returning struct function
	println("Combine : c = a + b");
	c = Combine(a, b);

	// Check that a & b weren't modified
	println("  a:");
	print  ("    width  : 4 == ");
	println(a.width);
	print  ("    height : 5 == ");
	println(a.height);
	println("  b:");
	print  ("    width  : 6 == ");
	println(b.width);
	print  ("    height : 7 == ");
	println(b.height);

	// Check the result of C
	println("  c:");
	print  ("    width  : 10 == ");
	println(c.width);
	print  ("    height : 12 == ");
	println(c.height);

	return 0;
}

Rect Shift(Rect a, int val) {
	a.width = a.width + val;
	a.height = a.height + val;
	return a;
}

i32 Area(Rect rec){
	return rec.width * rec.height;
}

Rect Combine(Rect a, Rect b) {
	a.width = a.width + b.width;
	a.height = a.height + b.height;
	return a;
}